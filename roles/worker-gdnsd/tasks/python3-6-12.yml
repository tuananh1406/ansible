- name: Download python "{{ PYTHON_VERSION }}" source
  get_url:
   url: https://www.python.org/ftp/python/{{ PYTHON_VERSION }}/Python-{{ PYTHON_VERSION }}.tar.xz
   dest: /opt/Python-{{ PYTHON_VERSION }}.tar.xz
   checksum: "{{ PYTHON_CHECKSUM }}"

- name: Untar source
  unarchive:
   src: /opt/Python-{{ PYTHON_VERSION }}.tar.xz
   dest: /opt
   remote_src: yes

- name: Config python {{ PYTHON_VERSION }}
  shell: ./configure --enable-optimizations --with-ensurepip=install --with-lto --enable-loadable-sqlite-extensions
  args: 
    chdir: /opt/Python-{{ PYTHON_VERSION }}
  async: 1500
  poll: 0
  register: config_result

- name: Check config python progress
  async_status:
    jid: "{{ config_result.ansible_job_id }}"
  register: job_config
  until: job_config.finished
  retries: 30
  delay: 15

- name: Install python
  shell: make -j 8 && make altinstall
  args:
    chdir: /opt/Python-{{ PYTHON_VERSION }}
  async: 3000
  poll: 0
  register: install_result

- name: Check install python progress
  async_status:
    jid: "{{ install_result.ansible_job_id }}"
  register: job_install
  until: job_install.finished
  retries: 100
  delay: 30

- name: Clean
  ansible.builtin.file:
    path: /opt/Python-{{ PYTHON_VERSION }}.tar.xz
    state: absent
    force: yes

- name: Clean
  ansible.builtin.file:
    path: /opt/Python-{{ PYTHON_VERSION }}
    state: absent
    force: yes
